apply plugin: 'com.android.application'
def Jenkins_build_num = JENKINS_BUILD_NUMBER.toInteger()

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.bluetoothtest"
        minSdkVersion 15
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 22
        versionCode Jenkins_build_num
        versionName APP_VERSION
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias APP_KEY_ALIAS
            keyPassword APP_KEY_PASSWORD
            storeFile file(APP_STORE_FILE_DIR)
            storePassword APP_STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            /*apk重命名*/
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if ("true".equals(IS_JENKINS)) {
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${JENKINS_BUILD_NUMBER}-${JENKINS_TIME}.apk"
                    } else {
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${variant.versionCode}-${releaseTime()}.apk"
                    }

                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            /*apk重命名*/
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if ("true".equals(IS_JENKINS)) {
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${JENKINS_BUILD_NUMBER}-${JENKINS_TIME}.apk"
                    } else {
                        outputFileName = "JenkinsTest-${variant.name}-v${APP_VERSION}#${variant.versionCode}-${releaseTime()}.apk"
                    }
                }
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'x86_64'
            universalApk true
        }
    }

}

// 定义一个打包时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
